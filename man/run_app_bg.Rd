% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run-app-bg.R
\name{run_app_bg}
\alias{run_app_bg}
\title{Run application in background for single user}
\usage{
run_app_bg(
  func,
  args,
  host = getOption("shiny.host", "127.0.0.1"),
  port = getOption("shiny.port")
)
}
\arguments{
\item{func}{Function passed as the \code{func} argument to \code{\link[callr:r_bg]{callr::r_bg()}}. This
must meet the following requirements:
\itemize{
\item \strong{launch} a Shiny app
\item accept \code{host} and \code{port} arguments and instruct Shiny to use those
\item call \code{\link[devtools:load_all]{devtools::load_all()}} with the value of the
\code{MRGDA_SHINY_DEV_LOAD_PATH} environment variable if it is a non-empty
string.
}}

\item{args}{Argument passed as \code{args} argument to \code{\link[callr:r_bg]{callr::r_bg()}}. This
should not include "host" or "port"; those will be added by this function.
Must be a named list.}

\item{host, port}{Host and port to serve the Shiny app on. If \code{port} isn't
specified, it is randomly selected from the valid range of dynamic ports.}
}
\value{
The callr process (invisibly).
}
\description{
Use \code{\link[callr:r_bg]{callr::r_bg()}} to launch the app in a separate process, returning once
\code{port} on \code{host} is active.
}
\details{
Make sure to set \code{Sys.setenv('MRGDA_SHINY_DEV_LOAD_PATH' = here::here())}
if you are in a development setting. This will allow package functions to be
accessible in the background process, which is not an issue when the package
is installed.
}
\examples{

\dontrun{

shiny_func <- function(
   df,
   filter = TRUE,
   host = NULL,
   port = NULL
){

 # For Development Environment, must load the package
 load_path <- Sys.getenv("MRGDA_SHINY_DEV_LOAD_PATH")
 if (nzchar(load_path)) {
   message("Loading ", load_path)
   devtools::load_all(load_path)
 }

 # other setup...

 ui <- fluidPage
 server <- function(input, output, session) {}

 # Passes the host and port to the shinyApp object
 app <- shiny::shinyApp(ui = ui, server = server,
                 options = list(host = host, port = port))

 # Function launches the app
 shiny::runApp(app)
}

# Launching app in background
args <- list(df = mtcars, filter = TRUE)
run_app_bg(shiny_func, args = args)

}

}
\keyword{internal}
