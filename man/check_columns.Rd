% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-columns.R
\name{check_columns}
\alias{check_columns}
\title{Check Column Names in a DataFrame}
\usage{
check_columns(df, lookup)
}
\arguments{
\item{df}{A data frame whose column names are being checked.}

\item{lookup}{A data frame that specifies the correct column names, whether each column is 'required'
or 'permitted', and common alternative names for each column. This data frame should have three columns:
'column_name' (the correct names for the columns), 'type' (whether each column is 'required' or 'permitted'),
and 'alt_name' (common alternative names for each column). The 'alt_name' column should not have any duplicates.}
}
\value{
A named logical vector with two elements. The first element, 'All required columns present', is \code{TRUE}
if all required columns are present in \code{df} and \code{FALSE} otherwise. The second element,
'No unpermitted columns present', is \code{TRUE} if there are no unpermitted columns in \code{df} and \code{FALSE} otherwise.
If any alternative names are found in \code{df}, the function will print a consolidated \code{dplyr} rename call
to correct all alternative names at once.
}
\description{
This function checks if the columns of a data frame (\code{df}) are correctly named based on
a lookup data frame (\code{lookup}). The \code{lookup} should specify what columns are 'required'
or 'permitted' and also provide common alternative names for the columns. If any alternative
names are found in \code{df}, the function will print a consolidated \code{dplyr} rename call to correct
all alternative names at once.
}
\examples{
# create a data frame to check
df <- data.frame(A = 1:5, B = 6:10, C = 11:15)

# create a lookup data frame
lookup <- data.frame(column_name = c("A", "B", "C"),
                     type = c("required", "required", "permitted"),
                     alt_name = c("AA", "BB", "CC"))

# check the columns
check_columns(df, lookup)

}
